---
apiVersion: v1
kind: Service
metadata:
  name: envoy-headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: envoy
  ports:
    - port: 6437
      name: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: envoy
  name: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: envoy
      app.kubernetes.io/instance: envoy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: envoy
        app.kubernetes.io/instance: envoy
    spec:
      containers:
        - image: bitnami/envoy
          imagePullPolicy: Always
          name: envoy
          ports:
            - name: envoyproxy
              containerPort: 6437
          resources:
            requests:
              memory: "200Mi"
              cpu: "200m"
              ephemeral-storage: "80Mi"
            limits:
              memory: "200Mi"
              cpu: "200m"
          volumeMounts:
            - mountPath: /opt/bitnami/envoy/conf/envoy.yaml
              name: my-config
              subPath: envoy.yaml
      restartPolicy: Always
      volumes:
        - name: my-config
          configMap:
            name: envoy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  labels:
    app.kubernetes.io/name: envoy
    app.kubernetes.io/instance: envoy
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 6437
          filter_chains:
            - filters:
              - name: envoy.http_connection_manager
                typed_config:
                  '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
                  stat_prefix: http_proxy
                  access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      json_format:
                        downstream: "%DOWNSTREAM_REMOTE_ADDRESS%"
                        downstream_direct: "%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%"
                        authority: "%REQ(:AUTHORITY)%"
                        upsteam_host: "%UPSTREAM_HOST%"
                        x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                  route_config:
                    name: all
                    request_headers_to_add:
                      header:
                        key: "X-Forwarded-For"
                        value: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                    virtual_hosts:
                      - name: allbackend_cluster
                        domains:
                          - '*'
                        routes:
                          - match: { prefix: "/"}
                            route:
                              cluster: allbackend_cluster
                              append_x_forwarded_host: true
                  http_filters:
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: allbackend_cluster
          connect_timeout: 1s
          type: strict_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: allbackend_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: demo-server-headless
                          port_value: 50051
